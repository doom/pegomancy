@verbatim %{
    from functools import reduce

    class JSONRuleHandler:
        def boolean(self, node):
            return True if node == 'true' else False

        def integer(self, node):
            return int(node)

        def string(self, node):
            return node[1]

        def float(self, node):
            return float(node)

        def list(self, node):
            return node["values"][::2]

        def field(self, node):
            return {node["key"]: node["value"]}

        def object(self, node):
            return reduce(lambda acc, new: {**acc, **new}, node["fields"][::2])
%}

null: 'null'

boolean: 'true' | 'false'

integer: r"[0-9]+"

string: '"' r'[^"]*' '"'

float: r"[0-9]+\.[0-9]+"

field: key:string ':' ~ value:value
object: '{' ~ fields:{ field ','...}* '}'

list: '[' ~ values:{ value ','...}+ ']'

value: null
     | boolean
     | float
     | integer
     | string
     | list
     | object

json: value ~ EOF
